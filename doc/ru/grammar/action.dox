/*! \file include/pm/grammar/action.hpp
 *  \brief Содержит класс \ref ConGrammar "грамматических действий" pm::grammar::Action.
 *  
 *  \ingroup ModuleGrammar
 */

/*! \class pm::grammar::Action
 *  \brief Класс \ref ConGrammar "грамматических действий".
 *  
 *  \ingroup ModuleGrammar
 *  
 *  Объект этого класса является \ref ConBaseDynamicWrapper "динамической обёрткой" над грамматическим действием в широком смысле.
 *  
 *  *Поддействие* - это (динамически созданный) объект, на который направлена обёртка.
 *  
 *  В документации готовых грамматических действий динамическая обёртка отождествляется со своим поддействием.
 *  
 *  *Это действие* - это обёртка, документируемый метод которой вызывается.
 *  
 *  Особые свойства класса
 *  ==
 *  
 *  \ref ConBaseValidState "Нестандартно-корректен".
 *  
 *  Неявные методы
 *  ==
 *  
 *  Конструктор копирования: `Action(const Action & a)`
 *  --
 *  
 *  Инициализировать действие, направленное на поддействие действия \p a.
 *  
 *  Конструктор перемещения: `Action(Action && a)`
 *  --
 *  
 *  Инициализировать действие, направленное на поддействие действия \p a.
 *  
 *  Копирующее присваивание: `Action & operator =(const Action & a)`
 *  --
 *  
 *  Перенаправить это действие на поддействие действия \p a.
 *  
 *  Перемещающее присваивание: `Action & operator =(Action && a)`
 *  --
 *  
 *  Перенаправить это действие на поддействие действия \p a.
 *  
 *  Деструктор: `~Action()`
 *  --
 *  
 *  Стандартное значение.
 */

/*! \fn pm::grammar::Action::Action()
 *  \brief Инициализировать действие "неуспех".
 */

/*! \fn pm::grammar::Action::Action(ActionInterface * arg_ptr)
 *  \brief Инициализировать действие, направленное на грамматическое действие в широком смысле, располагающееся по адресу \p arg_ptr (или эквивалентное действию "неуспех", если `arg_ptr == nullptr`).
 *  
 *  \pre Если `arg_ptr != nullptr`, то указатель \p arg_ptr разыменовываем, и объект, располагающийся по адресу \p arg_ptr, корректно уничтожается вызовом деструктора разыменования.
 *  \pre Если `arg_ptr != nullptr`, то объект, располагающийся по адресу \p arg_ptr, разрешено уничтожать только в рамках сборки мусора \ref ConTrickyPointers "стабильных указателей" согласно документации.
 */

/*! \fn pm::grammar::Action::Action(const type_abuse::SPtr<ActionInterface> & arg_ptr)
 *  \brief Инициализировать действие, направленное на объект указателя \p arg_ptr.
 */

/*! \fn pm::grammar::Action::Action(type_abuse::SPtr<ActionInterface> && arg_ptr)
 *  \brief Инициализировать действие, направленное на объект указателя \p arg_ptr.
 */

/*! \fn bool pm::grammar::Action::gamatch_full(stream::Stream & s, const Grammar & g, const Context & gcontext) const
 *  \brief Метод полного разбора потока \p s на грамматике \p g в контексте \p context. Вызвать метод полного разбора поддействия и вернуть результат этого вызова.
 */

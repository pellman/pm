/*! \file include/pm/grammar/syntax/actions/lazy.hpp
 *  \brief Ленивый интерфейс создания \ref ConGrammar "готовых определений грамматических действий".
 *  
 *  \ingroup ModuleGrammar
 *  
 *  Описание оператора, возвращающего определение грамматического действия, содержит название возвращаемого определения.
 *  
 *  Общая рекомендация по использованию готовых определений грамматических действий: не рекомендуется создавать определения, содержащие себя прямо или косвенно в качестве подопределений, так как это может привести к **утечкам памяти**.
 */

/*! \fn Action pm::grammar::syntax::operator |(const std::string & name, const Action & a)
 *  \brief Определение альтернативы над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(const std::string & name, Action && a)
 *  \brief Определение альтернативы над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(std::string && name, const Action & a)
 *  \brief Определение альтернативы над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(std::string && name, Action && a)
 *  \brief Определение альтернативы над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(const Action & a, const std::string & name)
 *  \brief Определение альтернативы над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator |(const Action & a, std::string && name)
 *  \brief Определение альтернативы над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator |(Action && a, const std::string & name)
 *  \brief Определение альтернативы над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator |(Action && a, std::string && name)
 *  \brief Определение альтернативы над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator &(const std::string & name, const Action & a)
 *  \brief Определение правила над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(const std::string & name, Action && a)
 *  \brief Определение правила над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(std::string && name, const Action & a)
 *  \brief Определение правила над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(std::string && name, Action && a)
 *  \brief Определение правила над (ac(name), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(const Action & a, const std::string & name)
 *  \brief Определение правила над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator &(const Action & a, std::string && name)
 *  \brief Определение правила над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator &(Action && a, const std::string & name)
 *  \brief Определение правила над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator &(Action && a, std::string && name)
 *  \brief Определение правила над (a, ac(name)).
 */

/*! \fn Action pm::grammar::syntax::operator |(const regexp::Regexp & r, const Action & a)
 *  \brief Определение альтернативы над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(const regexp::Regexp & r, Action && a)
 *  \brief Определение альтернативы над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(regexp::Regexp && r, const Action & a)
 *  \brief Определение альтернативы над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(regexp::Regexp && r, Action && a)
 *  \brief Определение альтернативы над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(const Action & a, const regexp::Regexp & r)
 *  \brief Определение альтернативы над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator |(const Action & a, regexp::Regexp && r)
 *  \brief Определение альтернативы над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator |(Action && a, const regexp::Regexp & r)
 *  \brief Определение альтернативы над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator |(Action && a, regexp::Regexp && r)
 *  \brief Определение альтернативы над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator &(const regexp::Regexp & r, const Action & a)
 *  \brief Определение правила над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(const regexp::Regexp & r, Action && a)
 *  \brief Определение правила над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(regexp::Regexp && r, const Action & a)
 *  \brief Определение правила над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(regexp::Regexp && r, Action && a)
 *  \brief Определение правила над (ac(r), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(const Action & a, const regexp::Regexp & r)
 *  \brief Определение правила над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator &(const Action & a, regexp::Regexp && r)
 *  \brief Определение правила над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator &(Action && a, const regexp::Regexp & r)
 *  \brief Определение правила над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator &(Action && a, regexp::Regexp && r)
 *  \brief Определение правила над (a, ac(r)).
 */

/*! \fn Action pm::grammar::syntax::operator |(const dataset::syntax::Function & f, const Action & a)
 *  \brief Определение альтернативы над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(const dataset::syntax::Function & f, Action && a)
 *  \brief Определение альтернативы над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(dataset::syntax::Function && f, const Action & a)
 *  \brief Определение альтернативы над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(dataset::syntax::Function && f, Action && a)
 *  \brief Определение альтернативы над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator |(const Action & a, const dataset::syntax::Function & f)
 *  \brief Определение альтернативы над (a, ac(f)).
 */

/*! \fn Action pm::grammar::syntax::operator |(const Action & a, dataset::syntax::Function && f)
 *  \brief Определение альтернативы над (a, ac(f)).
 */

/*! \fn Action pm::grammar::syntax::operator |(Action && a, const dataset::syntax::Function & f)
 *  \brief Определение альтернативы над (a, ac(f)).
 */

/*! \fn Action pm::grammar::syntax::operator |(Action && a, dataset::syntax::Function && f)
 *  \brief Определение альтернативы над (a, ac(f)).
 */

/*! \fn Action pm::grammar::syntax::operator &(const dataset::syntax::Function & f, const Action & a)
 *  \brief Определение правила над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(const dataset::syntax::Function & f, Action && a)
 *  \brief Определение правила над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(dataset::syntax::Function && f, const Action & a)
 *  \brief Определение правила над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(dataset::syntax::Function && f, Action && a)
 *  \brief Определение правила над (ac(f), a).
 */

/*! \fn Action pm::grammar::syntax::operator &(const Action & a, const dataset::syntax::Function & f)
 *  \brief Определение правила над (a, ac(f)).
 */

/*! \fn Action pm::grammar::syntax::operator &(const Action & a, dataset::syntax::Function && f)
 *  \brief Определение правила над (a, ac(f)).
 */

/*! \fn Action pm::grammar::syntax::operator &(Action && a, const dataset::syntax::Function & f)
 *  \brief Определение правила над (a, ac(f)).
 */

/*! \fn Action pm::grammar::syntax::operator &(Action && a, dataset::syntax::Function && f)
 *  \brief Определение правила над (a, ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const std::string & name, const Function & f)
 *  \brief Определение альтернативы над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const std::string & name, Function && f)
 *  \brief Определение альтернативы над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(std::string && name, const Function & f)
 *  \brief Определение альтернативы над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(std::string && name, Function && f)
 *  \brief Определение альтернативы над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const Function & f, const std::string & name)
 *  \brief Определение альтернативы над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const Function & f, std::string && name)
 *  \brief Определение альтернативы над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(Function && f, const std::string & name)
 *  \brief Определение альтернативы над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(Function && f, std::string && name)
 *  \brief Определение альтернативы над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const std::string & name, const Function & f)
 *  \brief Определение правила над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const std::string & name, Function && f)
 *  \brief Определение правила над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(std::string && name, const Function & f)
 *  \brief Определение правила над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(std::string && name, Function && f)
 *  \brief Определение правила над (ac(name), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const Function & f, const std::string & name)
 *  \brief Определение правила над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const Function & f, std::string && name)
 *  \brief Определение правила над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(Function && f, const std::string & name)
 *  \brief Определение правила над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(Function && f, std::string && name)
 *  \brief Определение правила над (ac(f), ac(name)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const regexp::Regexp & re, const Function & f)
 *  \brief Определение альтернативы над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const regexp::Regexp & re, Function && f)
 *  \brief Определение альтернативы над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(regexp::Regexp && re, const Function & f)
 *  \brief Определение альтернативы над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(regexp::Regexp && re, Function && f)
 *  \brief Определение альтернативы над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const Function & f, const regexp::Regexp & re)
 *  \brief Определение альтернативы над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(const Function & f, regexp::Regexp && re)
 *  \brief Определение альтернативы над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(Function && f, const regexp::Regexp & re)
 *  \brief Определение альтернативы над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator |(Function && f, regexp::Regexp && re)
 *  \brief Определение альтернативы над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const regexp::Regexp & re, const Function & f)
 *  \brief Определение правила над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const regexp::Regexp & re, Function && f)
 *  \brief Определение правила над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(regexp::Regexp && re, const Function & f)
 *  \brief Определение правила над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(regexp::Regexp && re, Function && f)
 *  \brief Определение правила над (ac(re), ac(f)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const Function & f, const regexp::Regexp & re)
 *  \brief Определение правила над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(const Function & f, regexp::Regexp && re)
 *  \brief Определение правила над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(Function && f, const regexp::Regexp & re)
 *  \brief Определение правила над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator &(Function && f, regexp::Regexp && re)
 *  \brief Определение правила над (ac(f), ac(re)).
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(const std::string & name, const Function & f_fail)
 *  \brief Определение ac(name) с функцией отката f_fail.
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(const std::string & name, Function && f_fail)
 *  \brief Определение ac(name) с функцией отката f_fail.
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(std::string && name, const Function & f_fail)
 *  \brief Определение ac(name) с функцией отката f_fail.
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(std::string && name, Function && f_fail)
 *  \brief Определение ac(name) с функцией отката f_fail.
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(const regexp::Regexp & r, const Function & f_fail)
 *  \brief Определение ac(r) с функцией отката f_fail.
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(const regexp::Regexp & r, Function && f_fail)
 *  \brief Определение ac(r) с функцией отката f_fail.
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(regexp::Regexp && r, const Function & f_fail)
 *  \brief Определение ac(r) с функцией отката f_fail.
 */

/*! \fn grammar::syntax::Action pm::dataset::syntax::operator -(regexp::Regexp && r, Function && f_fail)
 *  \brief Определение ac(r) с функцией отката f_fail.
 */

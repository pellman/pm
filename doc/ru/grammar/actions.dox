/*! \file include/pm/grammar/actions.hpp
 *  \brief Интерфейс создания \ref ConGrammar "готовых грамматических действий".
 *  
 *  \ingroup ModuleGrammar
 *  
 *  Описание функции, возвращающей грамматическое действие, содержит название возвращаемого действия.
 *  
 *  Общие рекомендации по использованию готовых грамматических действий:
 *  - Каждое применение функции над совокупностью данных в процессе разбора грамматикой должно быть корректно.
 *  - Каждое применение функции над данными внутри регулярного выражения должно быть корректно.
 */

/*! \fn Action pm::grammar::ac(const dataset::Function & f)
 *  \brief Функция \p f.
 */

/*! \fn Action pm::grammar::ac(dataset::Function && f)
 *  \brief Функция \p f.
 */

/*! \fn Action pm::grammar::ac(size_t index, const dataset::Function & f_fail)
 *  \brief Перенаправление на индекс \p index с функцией отката \p f.
 */

/*! \fn Action pm::grammar::ac(size_t index, dataset::Function && f_fail)
 *  \brief Перенаправление на индекс \p index с функцией отката \p f.
 */

/*! \fn Action pm::grammar::ac(const regexp::Regexp & r)
 *  \brief Регулярное выражение \p r.
 */

/*! \fn Action pm::grammar::ac(regexp::Regexp && r)
 *  \brief Регулярное выражение \p r.
 */

/*! \fn Action pm::grammar::ac(const regexp::Regexp & r, size_t data_index)
 *  \brief Регулярное выражение \p r с индексом данных \p data_index.
 */

/*! \fn Action pm::grammar::ac(regexp::Regexp && r, size_t data_index)
 *  \brief Регулярное выражение \p r с индексом данных \p data_index.
 */

/*! \fn Action pm::grammar::ac(size_t index)
 *  \brief Перенаправление на индекс \p index.
 */

/*! \fn Action pm::grammar::ac_false()
 *  \brief Неуспех.
 */

/*! \fn Action pm::grammar::ac_true()
 *  \brief Успех.
 */

/*! \fn Action pm::grammar::alt(const std::list<size_t> & indexes)
 *  \brief Альтернатива над \p indexes.
 */

/*! \fn Action pm::grammar::alt(std::list<size_t> && indexes)
 *  \brief Альтернатива над \p indexes.
 */

/*! \fn Action pm::grammar::alt(Indexes ... indexes)
 *  \brief Альтернатива над (\p indexes ...).
 *  
 *  Позволяет вместо pm::grammar::alt({i1, ..., ik}) писать pm::grammar::alt(i1, ..., ik): на одну пару скобок меньше.
 *  
 *  Эквивалентно вызову pm::grammar::alt(std::list<size_t>{indexes ...})
 */

/*! \fn Action pm::grammar::opt(size_t index)
 *  \brief Опционал над \p index.
 */

/*! \fn Action pm::grammar::rule(const std::list<size_t> & indexes)
 *  \brief Правило над \p indexes.
 */

/*! \fn Action pm::grammar::rule(std::list<size_t> && indexes)
 *  \brief Правило над \p indexes.
 */

/*! \fn Action pm::grammar::rule(Indexes ... indexes)
 *  \brief Правило над (\p indexes ...).
 *  
 *  Позволяет вместо pm::grammar::rule({i1, ..., ik}) писать pm::grammar::rule(i1, ..., ik): на одну пару скобок меньше.
 *  
 *  Эквивалентно вызову pm::grammar::rule(std::list<size_t>{indexes ...})
 */

/*! \fn Action pm::grammar::star(size_t index)
 *  \brief Звезда Клини над \p index.
 */

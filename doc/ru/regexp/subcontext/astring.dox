/*! \file include/pm/regexp/subcontext/astring.hpp
 *  \brief Содержит класс \ref ConRegexp "строкового подконтекста" pm::regexp::subcontext::AString.
 *  
 *  \ingroup ModuleRegexp
 */

/*! \class pm::regexp::subcontext::AString
 *  \brief Класс \ref ConRegexp "строкового подконтекста".
 *  
 *  \ingroup ModuleRegexp
 *  
 *  Cодержит два \ref ConTrickyPointers "стабильных указателя":
 *  - указатель типа pm::type_abuse::SPtr<std::string> на строку: `(*this).cstr`;
 *  - указатель типа pm::regexp::subcontext::Activator, производный от pm::type_abuse::SPtr<bool>, на флаг активации строки: `(*this).cact`;
 *  
 *  *Этот подконтекст* - это объект, документируемый метод которого вызывается.
 *  
 *  Особые свойства класса
 *  ==
 *  
 *  \ref ConBaseValidState "Нестандартно-корректен".
 *  
 *  Неявные методы
 *  ==
 *  
 *  Конструктор по умолчанию: `AString()`
 *  --
 *  
 *  Инициализировать подконтекст по умолчанию: новая пустая строка и новый опущенный флаг активности.
 *  
 *  Конструктор копирования: `AString(const AString & castr)`
 *  --
 *  
 *  Инициализировать подконтекст, все указатели которого направлены на соответствующие объекты подконтекста \p castr.
 *  
 *  Конструктор перемещения: `AString(AString && castr)`
 *  --
 *  
 *  Инициализировать подконтекст, все указатели которого направлены на соответствующие объекты подконтекста \p castr.
 *  
 *  Копирующее присваивание: `AString & operator =(const AString & castr)`
 *  --
 *  
 *  Перенаправить все указатели этого подконтекста на соответствующие объекты подконтекста \p castr.
 *  
 *  Перемещающее присваивание: `AString & operator =(AString && castr)`
 *  --
 *  
 *  Перенаправить все указатели этого подконтекста на соответствующие объекты подконтекста \p castr.
 *  
 *  Деструктор: `~AString()`
 *  --
 *  
 *  Стандартное значение.
 *  При уничтожении стабильных указателей этого подконтекста производится сборка мусора.
 */

/*! \fn void pm::regexp::subcontext::AString::detach()
 *  \brief Открепить все указатели этого подконтекста.
 */

/*! \fn void pm::regexp::subcontext::AString::detach_receive(const AString & castr)
 *  \brief Открепить все указатели этого подконтекста и затем перезаписать их соответствующими указателями подконтекста \p castr, но без фактического копирования объектов при откреплении.
 */

/*! \fn void pm::regexp::subcontext::AString::detach_set(bool act, Args && ... args)
 *  \brief Открепить все указатели этого подконтекста и затем переустановить их значения от аргументов \p act (флаг) и \p args (строка), но без фактического копирования объектов при откреплении.
 */

/*! \fn void pm::regexp::subcontext::AString::detach_unset(bool act)
 *  \brief Открепить все указатели этого подконтекста и затем присвоить строке значение по умолчанию, а флагу - значение \p act, но без фактического копирования объектов при откреплении.
 */

/*! \fn void pm::regexp::subcontext::AString::activate() const
 *  \brief Активировать этот подконтекст.
 */

/*! \fn void pm::regexp::subcontext::AString::deactivate() const
 *  \brief Деактивировать этот подконтекст.
 */

/*! \fn void pm::regexp::subcontext::AString::receive(const AString & castr) const
 *  \brief Перезаписать все указатели этого подконтекста соответствующими указателями подконтекста \p castr.
 */

/*! \fn void pm::regexp::subcontext::AString::set(bool act, Args && ... args) const
 *  \brief Переустановить значение флага от аргумента \p act, и значение строки - от аргументов \p args.
 */

/*! \fn void pm::regexp::subcontext::AString::swap(const AString & castr) const
 *  \brief Обменять содержимое всех указателей этого подконтекста и соответствующих указателей подконтекста \p castr.
 */

/*! \fn void pm::regexp::subcontext::AString::unset(bool act) const
 *  \brief Опустошить содержащуюся строку и присвоить содержащемуся флагу активации значение \p act.
 */

/*! \fn AString pm::regexp::subcontext::AString::clone() const
 *  \brief Вернуть подконтекст, все указатели которого являются клонами указателей этого подконтекста.
 */

/*! \fn void pm::regexp::subcontext::AString::send(const AString & castr) const
 *  \brief Перезаписать все указатели подконтекста \p castr соответствующими указателями этого подконтекста.
 */

/*! \fn bool pm::regexp::subcontext::AString::active() const
 *  \brief Вернуть `true` <=> этот подконтекст активен.
 */

/*! \fn bool pm::regexp::subcontext::AString::inactive() const
 *  \brief Вернуть `true` <=> этот подконтекст неактивен.
 */

/*! \fn std::string & pm::regexp::subcontext::AString::str() const
 *  \brief Вернуть строку этого подконтекста.
 */

/*! \var Activator pm::regexp::subcontext::AString::cact
 *  \brief Стабильный указатель на флаг активации строки.
 */

/*! \var type_abuse::SPtr<std::string> pm::regexp::subcontext::AString::cstr
 *  \brief Стабильный указатель на строку.
 */

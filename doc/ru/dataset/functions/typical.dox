/*! \file include/pm/dataset/functions/typical.hpp
 *  \brief Содержит \ref ConDataset "типичный интерфейс создания конкретных функций над совокупностью".
 *  
 *  \ingroup ModuleDataset
 *  
 *  В описании глобальной функции, возвращающей функцию над совокупностью, описывается собственно возвращаемая функция.
 *  
 *  Общее требование к применению возвращаемых функций:
 *  все их применения к совокупности данных должны быть корректны.
 */

/*! \fn Function pm::dataset::clone(size_t target, size_t source)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::clone(), [\p target, \p source]).
 */

/*! \fn Function pm::dataset::set(size_t target, Args && ... args)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::set<\p NewStoredValue>(std::forward<Args>(\p args) ...), [\p target]).
 */

/*! \fn Function pm::dataset::swap(size_t target1, size_t target2)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::swap(), [\p target1, \p target2]).
 */

/*! \fn Function pm::dataset::unset(size_t target)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::unset(), [\p target]).
 */

/*! \fn Function pm::dataset::add(size_t target_left, size_t target_right)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::add<\p Left, \p Right>(), [\p target_left, \p target_right]).
 */

/*! \fn Function pm::dataset::add(size_t target, Right && i)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::add<\p Left>(std::forward<Right>(i)), [\p target]).
 */

/*! \fn Function pm::dataset::div(size_t target_left, size_t target_right)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::div<\p Left, \p Right>(), [\p target_left, \p target_right]).
 */

/*! \fn Function pm::dataset::div(size_t target, Right && i)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::div<\p Left>(std::forward<Right>(i)), [\p target]).
 */

/*! \fn Function pm::dataset::mod(size_t target_left, size_t target_right)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::mod<\p Left, \p Right>(), [\p target_left, \p target_right]).
 */

/*! \fn Function pm::dataset::mod(size_t target, Right && i)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::mod<\p Left>(std::forward<Right>(i)), [\p target]).
 */

/*! \fn Function pm::dataset::mul(size_t target_left, size_t target_right)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::mul<\p Left, \p Right>(), [\p target_left, \p target_right]).
 */

/*! \fn Function pm::dataset::mul(size_t target, Right && i)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::mul<\p Left>(std::forward<Right>(i)), [\p target]).
 */

/*! \fn Function pm::dataset::sub(size_t target_left, size_t target_right)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::sub<\p Left, \p Right>(), [\p target_left, \p target_right]).
 */

/*! \fn Function pm::dataset::sub(size_t target, Right && i)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::sub<\p Left>(std::forward<Right>(i)), [\p target]).
 */

/*! \fn Function pm::dataset::char_to_digit(size_t target)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::char_to_digit<\p Int>(), [\p target]).
 */

/*! \fn Function pm::dataset::char_to_string(size_t target)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::char_to_string(), [\p target]).
 */

/*! \fn Function pm::dataset::convert(size_t target)
 *  \brief Конкретная чистая функция (pm::type_abuse::funs::convert<\p To, \p From>(), [\p target]).
 */

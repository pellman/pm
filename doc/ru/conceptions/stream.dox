/*! \page ConStream Поток
 * 
 * Понятие потока, используемое в \ref index "этой библиотеке" - строго более узкое, чем \ref ConBaseStandardTypes "стандартный поток ввода", и применимо к стандартному потоку ввода, а также другим видам потоков, в тех проявлениях, в которых они используются в \ref index "этой библиотеке".
 * 
 * *Поток* - это то, для чего определена *операция чтения символа* (см. \ref ConBaseStandardTypes).
 * Эта операция может быть *успешной* и *неуспешной*.
 * При успешном применении операции чтения определён символ, *прочитанный* этой операцией.
 * При неуспешном применении операции чтения никакой символ не прочитан.
 * 
 * Операция чтения с точки зрения документации стандартного потока ввода - это неформатированный ввод символа.
 * Это означает, в числе прочего, что при чтении не пропускаются никакие символы, в том числе пробелы, табуляции и переводы строки.
 * Операция чтения из стандартного потока ввода успешна, если метод `good()`, вызванный сразу после применения операции, возвращает `true`, то есть если не поднят ни один из флагов `eofbit`, `failbit`, `badbit`:
 * в потоке не происходило ошибок чтения, и при чтении не достигнут конец потока.
 * 
 * Поток может быть *открытым* и *закрытым*.
 * Если поток закрыт, то следующее чтение символа из него обязательно неуспешно и поток остаётся закрытым.
 * Если поток открыт и чтение символа из него успешно, то после операции чтения поток остаётся открытым.
 * Если поток открыт и чтение символа из него неуспешно, то после операции чтения поток становится закрытым.
 * 
 * Стандартный поток ввода открыт тогда и только тогда, когда метод `good()` возвращает `true`.
 * 
 * Поток *стабилен*, если при применении любой последовательности операций чтения (до первой неуспешной) успешность каждой операции и значение прочитанного ей символа зависит только от количества применённых ранее операций чтения.
 * В частности, \ref ConBaseStandardTypes "строковый поток ввода" стабилен (сам по себе и расцениваемый как стандартный поток ввода), а стандартный поток ввода в общем случае нестабилен.
 * 
 * Со стабильным потоком \f$ S \f$ ассоциирована *содержащаяся в нём* последовательность символов \f$ S[1], S[2], S[3], \dots \f$ (для краткости - просто *последовательность символов этого потока*):
 * - \f$ S[i] \f$ - это символ, который будет успешно прочитан операцией чтения, i-й по порядку применения;
 * - если k-я по порядку операция чтения - первая неуспешная, то последовательность конечна и содержит \f$ k-1 \f$ элемент;
 * - если при применении любого числа операций чтения к потоку все операции всегда успешны, то последовательность бесконечна.
 * 
 * Для наглядности описания с нестабильным потоком ассоциируется аналогичная последовательность символов.
 * Эта последовательность относится к конкретному выполнению операций чтения в программе и фактически читаемым из потока символам.
 */

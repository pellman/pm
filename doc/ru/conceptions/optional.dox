/*! \page ConOptional Опционал
 * 
 * Введение
 * --
 * 
 * Это понятие во многом аналогично одноимённому понятию стандарта c++17 (std::optional), хотя местами и отличается от него интерфейсом взаимодействия.
 * На момент написания кода общеподдерживаемым считался стандарт c++11, так что было принято решение реализовать свой опционал (с блэкджеком и прочими развлечениями).
 * 
 * Понятийная база
 * --
 * 
 * *Опционал* - это нередко встречающееся и используемое в языках программирования понятие, означающее следующее:
 * - задан некоторый тип - *тип опционала*;
 * - опционал может *хранить* объект этого типа;
 * - опционал может и не хранить ни один объект - тогда он *пуст*;
 * - интерфейс работы с опционалом включает в себя:
 *  - *опустошение* опционала: в результате он становится пустым; если опционал был непуст, то хранящийся объект уничтожается;
 *  - *наполнение* опционала заданным объектом: в результате функционал становится непустым и хранящим этот объект; если опционал был непуст до наполнения, то исходный хранящийся объект уничтожается;
 *  - методы проверки пустоты опционала;
 *  - методы работы с хранимым объектом, если функционал непуст.
 * 
 * Реализация
 * --
 * 
 * *Опционал* - это объект шаблонного класса pm::utils::Optional.
 * Аргумент шаблона - это тип хранимых объектов.
 */
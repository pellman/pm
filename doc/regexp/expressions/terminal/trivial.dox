/*! \file include/pm/regexp/expressions/terminal/trivial.hpp
 *  \brief Содержит интерфейс создания \ref PRLTTrivial "готовых тривиальных регулярных выражений": конец потока, всегда успех, всегда неуспех.
 *  \ingroup ModuleRegexp
 *  
 *  Все выражения, создаваемые при помощи интерфейса, \ref PRSafety "безопасны".
 *  
 *  \ref GNNParsing "Принимаемая строка": пустая строка.
 *  
 *  \ref PRSafety "Способ изменения данных": текущие и сохранённые данные \ref pm::regexp::Context "контекста" не изменяются выражением.
 *  
 *  В документации интерфейса описывается устройство \ref pm::regexp::RegexpInterface "метода разбора" \ref pm::regexp::Regexp "регулярного выражения", возвращаемого вызовом функции интерфейса.
 *  
 *  \sa \ref PRList "Список готовых регулярных выражений"
 */

/*! \fn Regexp pm::regexp::end()
 *  \anchor PREnd
 *  \brief Конец потока: разбор успешен <=> поток пуст.
 *  
 *  При разборе из \ref GNNUngettableStream "потока" читается символ, и если успешно прочитан, то немедленно возвращается.
 */

/*! \fn Regexp pm::regexp::re_false()
 *  \anchor PRFalse
 *  \brief Неуспех: разбор всегда неуспешен.
 *  
 *  При разборе из \ref GNNUngettableStream "потока" не читаются символы, и в него не возвращаются символы.
 */

/*! \fn Regexp pm::regexp::re_true()
 *  \anchor PRTrue
 *  \brief Успех: разбор всегда успешен.
 *  
 *  При разборе из \ref GNNUngettableStream "потока" не читаются символы, и в него не возвращаются символы.
 */

/*! \file include/pm/grammar/context.hpp
 *  \brief Содержит класс грамматических контекстов разбора pm::grammar::Context.
 *  \ingroup ModuleGrammar
 */

/*! \class pm::grammar::Context
 *  \brief Класс грамматических контекстов разбора.
 *  \ingroup ModuleGrammar
 *  
 *  
 *  Используется в методах \ref pm::grammar::Nonterminal "нетерминалов" при работе с \ref pm::grammar::Grammar "грамматиками".
 *  
 *  Состоит из:
 *  - \ref pm::regex::StringContext "строкового (под)контекста";
 *  - \ref pm::set::Set "совокупности данных".
 *  
 *  С учётом вложенности полей *содержит*:
 *  - \ref DTypes "флаг" (= флаг строкового подконтекста);
 *  - \ref DTypes "строку" (= строка строкового подконтекста);
 *  - неограниченное число \ref pm::data::Data "данных", пронумерованных \ref DTypes "индексами" (= данные совокупности данных).
 *  
 *  *Смысл контекста* с точки зрения \ref pm::grammar::Nonterminal "процедуры грамматического разбора":
 *  - Флаг не изменяется разбором.
 *  - Разбор неуспешен или флаг строки опущен => строка не изменяется разбором.
 *  - Разбор успешен и флаг строки поднят => в строку контекста записывается \ref ParseProcedure "принятая строка".
 *  - Данные контекста изменяются согласно процедуре разбора.
 *  
 *  Особые свойства класса
 *  ==
 *  
 *  \ref DValidState "Стандартно-корректен".
 *  
 *  Неявные методы
 *  ==
 *  
 *      Context()
 *  
 *  Инициализировать контекст, содержащий опущенный флаг, пустую строку и пустые данные по всем номерам.
 *  
 *  
 *      Context(const Context &)
 *  
 *  Удалён.
 *  
 *  
 *      Context(Context && c)
 *  
 *  Инициализировать контекст, содержащий перемещение содержимого контекста \p context.
 *  
 *  
 *      Context & operator =(const Context &)
 *  
 *  Удалено.
 *  
 *  
 *      Context & operator =(Context && context)
 *  
 *  Перезаписать содержимое этого контекста перемещением содержимого контекста \p context.
 *  
 *  
 *      ~Context()
 *  
 *  Уничтожить контекст.
 */

/*! \fn data::Data & pm::grammar::Context::data(size_t index)
 *  \brief Вернуть ссылку на данные контекста с номером \p index.
 */

/*! \fn std::string & pm::grammar::Context::str()
 *  \brief Вернуть ссылку строку контекста.
 */

/*! \fn const std::string & pm::grammar::Context::str()
 *  \brief Вернуть ссылку строку контекста.
 */

/*! \fn bool & pm::grammar::Context::string_flag()
 *  \brief Вернуть ссылку на флаг контекста.
 */

/*! \fn bool pm::grammar::Context::string_flag() const
 *  \brief Вернуть значение флага контекста.
 */

/*! \var set::Set pm::grammar::Context::ds
 *  \brief Совокупность данных.
 */

/*! \var pm::regex::StringContext pm::grammar::Context::sc
 *  \brief Строковый подконтекст.
 */

/*! \file include/pm/grammar/syntax/action.hpp
 *  \brief Содержит класс определения грамматического действия pm::grammar::syntax::Action.
 *  \ingroup ModuleGrammar
 */

/*! \class pm::grammar::syntax::Action
 *  \brief Класс определения грамматического действия.
 *  \ingroup ModuleGrammar
 *  
 *  Целевой способ использования этих объектов - наглядное описание \ref pm::grammar::Action "грамматических действий" в \ref pm::grammar::syntax::Grammar "определении грамматики" для последующего автоматического получения собственно \ref pm::grammar::Grammar "грамматики".
 *  
 *  Методы этого класса намеренно не документированы.
 *  Чтобы осознать то, как работать с объектами этого класса, достаточно изучить:
 *  - устройство \ref pm::grammar::syntax::Grammar "класса определения грамматики", включая способ интерпретации определения грамматики;
 *  - \ref PGList "список готовых грамматических действий и их определений".
 *  
 *  Особые свойства класса
 *  ==
 *  
 *  \ref GNNValidState "Нестандартно-корректен".
 *  
 *  Является \ref GNNDynamicWrapper "динамической обёрткой" над особенным недокументированным классом - интерфейсом определения грамматического действия.
 *  
 *  Неявные методы
 *  ==
 *  
 *  Конструктор копирования: `Action(const Action & a)`
 *  --
 *  
 *  Инициализировать определение, направленное на подобъект определения \p a.
 *  
 *  Конструктор перемещения: `Action(Action && a)`
 *  --
 *  
 *  Инициализировать определение, направленное на подобъект определения \p a.
 *  
 *  Копирующее присваивание: `Action & operator =(const Action & a)`
 *  --
 *  
 *  Перенаправить это определение на подобъект определения \p a.
 *  
 *  Перемещающее присваивание: `Action & operator =(Action && a)`
 *  --
 *  
 *  Перенаправить это определение на подобъект определения \p a.
 *  
 *  Деструктор: `~Action()`
 *  --
 *  
 *  Стандартное значение.
 */

/*! \fn pm::grammar::syntax::Action::Action()
 *  \brief Инициализировать \ref PGDFail "определение неуспеха".
 */

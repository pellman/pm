/*! \page GNSComparability Сравнимые типы
 *  
 *  В некоторых шаблонных классах и функциях явно или косвенно накладываются ограничения на тип, подаваемый в качестве аргумента шаблона.
 *  Типовые ограничения такого вида: объекты заданного типа можно сравнивать.
 *  Типы, удовлетворяющие такому ограничению, иногда называют *сравнимыми* (comparable).
 *  
 *  Далее приведена основная суть понятия сравнимости - без углубления в эволюцию этого понятия и в дебри технических деталей.
 *  
 *  Тип `T` - <em>==-сравнимый</em>, если выражение `x == y`, где `x`, `y` - объекты типа `T`, корректно и возвращает значение типа `bool`.
 *  Если возвращаемое значение - `true`, то объекты *равны* (*одинаковы*), а если `false`, то *неравны* (*различаются*).
 *  
 *  Для ==-сравнения объектов полагаются выполненными типовые свойства равенства: `(x == x)`; если `(x == y)`, то `(y == x)`; если `(x == y)` и `(y == z)`, то `(x == z)`.
 *  Если эти свойства не выполнены, то выполнение программы в некоторых случаях может быть непредсказуемым.
 *  
 *  
 *  Тип `T` - <em><-сравнимый</em>, если выражение `x < y`, где `x`, `y` - объекты типа `T`, корректно и возвращает значение типа `bool`.
 *  Если возвращаемое значение - `true`, то объект `x` *меньше* объекта `y`, а если `false`, то *не меньше*.
 *  
 *  Для <-сравнения объектов полагаются выполненными типовые свойства неравенства: `!(x < x)`; если `(x < y)`, то `!(y < x)`; если `(x < y)` и `(y < z)`, то `(x < z)`.
 *  Если эти свойства не выполнены, то выполнение программы в некоторых случаях может быть непредсказуемым.
 *  
 *  Объект `x` <-сравнимого типа *больше* объекта `y` того же типа, если `y < x`.
 *  Объекты `x`, `y` <-сравнимого типа *неравны* (*различаются*), если `(x < y) || (y < x)`, и *равны* (*одинаковы*), если `!((x < y) || (y < x))`
 *  
 *  *Сравнимые типы* - это ==-сравнимые типы и <-сравнимые типы.
 */

/*! \page GNNValidState Корректное состояние объекта
 *  
 *  В стандарте C++ используется понятие *корректного состояния* (valid state).
 *  Использование объектов стандартных типов согласно документации допустимо только для объектов, находящихся в таком состоянии.
 *  
 *  К классам, реализованным в библиотеке, применяется более строгое понятие корректного состояния, запрещающее использовать значения \ref GNSLifetime "перемещённых" объектов, пока им не будет явно \ref GNSLifetime "присвоено" корректное значение.
 *  Классы, к которым применимо такое "усиленное" понятие корректного состояния, в документации называются *нестандартно-корректными*.
 *  
 *  Объект нестандартно-корректного класса находится в *корректном состоянии*, если верно следующее:
 *  - он \ref GNSLifetime "инициализирован";
 *  - он не \ref GNSLifetime "уничтожен" и не находится в процессе уничтожения;
 *  - ни один его метод не находится в процессе выполнения;
 *  - он не \ref GNSLifetime "перемещён" и не находится в процессе перемещения, либо после последнего перемещения ему было присвоено значение объекта в корректном состоянии через \ref GNSLifetime "копирующее или перемещающее присваивание".
 *  
 *  Перемещённый объект нестандартно-корректного класса корректно уничтожается, но использование этого объекта где бы то ни было (вызов методов, подача в качестве аргумента функции, ...), кроме левой части копирующего или перемещающего присваивания с правой частью - объектом в корреткном состоянии, **запрещено**.
 *  
 *  \sa \ref GNSValidState "Стандартно-корректный класс"
 */

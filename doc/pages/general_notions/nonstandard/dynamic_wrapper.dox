/*! \page GNNDynamicWrapper Динамическая обёртка
 *  
 *  В библиотеке часто используется один особенный приём построения системы классов:
 *  - Описывается базовый класс `Base`.
 *  - Описывается набор классов, наследованных от `Base` и перегружающих виртуальную часть интерфейса `Base`.
 *  - Описывается класс `W`, наследованный от `Base`: в объекте типа `W` содержится специальный указатель на *подобъект*: динамически созданный объект класса, наследованного от `Base`.
 *  - Виртуальные методы класса `Base` перегружаются в `W` следующим образом:
 *   - вызвать соответствующий метод подобъекта с теми же аргументами;
 *   - вернуть результат вызванного метода.
 *  
 *  Класс `W`, устроенный таким образом, в документации называется *динамической обёрткой* над `Base`.
 *  
 *  Интерфейс работы с динамическими обёртками удовлетворяет следующим свойствам:
 *  - \ref GNSLifetime "Копирование, перемещение, копирующее присваивание и перемещающее присваивание" - это "легковесные" операции: подобъект никак не затрагивается, соответствующее действие производится над указателем обёртки.
 *  - При создании динамической обёртки, не инициализируемой от других динамических обёрток, динамически создаётся новый подобъект, и эта операция настолько же легковесна, насколько и \ref GNSLifetime "копирование/перемещение/создание" данных, используемых при создании подобъекта.
 *  - Класс динамической обёртки поддерживает сборку мусора: подобъект уничтожается, когда на него перестаёт кто-либо указывать.
 *  - Не рекомендуется при работе с динамическими обёртками создавать кольцевые ссылки, так как это может приводить к **утечкам памяти**.
 *   - Кольцевая ссылка выглядит так: подобъект, содержащий обёртку, содержащую подобъект, ... содержащий обёртку, указывающую на исходный подобъект.
 */

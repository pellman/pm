/*! \page PGSafety Слабо-безопасные грамматические действия
 *  
 *  \tableofcontents
 *  
 *  \ref pm::grammar::ActionInterface "Методы разбора" всех \ref PGList "готовых грамматических действий" удовлетворяют ряду свойств, коротко описываемых как "естественность", "предсказуемость" и "разумность" разбора.
 *  \ref pm::grammar::Action "Грамматические действия", удовлетворяющие этим свойствам, в документации называются *слабо-безопасными*.
 *  
 *  Понятие слабой безопасности похоже на понятие \ref PRSafety "безопасности" для \ref pm::regexp::RegexpInterface "методов разбора регулярными выражениями", но является более слабым:
 *  - Если флаг активности данных \ref GNNParsing "контекста разбора" поднят и разбор неуспешен, то \ref GNNData "данные" контекста могут измениться согласно семантике грамматического действия.
 *  
 *  Далее приведён полный список свойств выполнения \ref pm::grammar::ActionInterface "метода разбора" \ref pm::stream::Stream "буферизованного потока" \f$ s \f$ на \ref pm::grammar::Grammar "грамматике" \f$ g \f$ в \ref pm::grammar::Context "грамматическим контексте" \f$ c \f$ слабо-безопасным грамматическим действием.
 *  
 *  "Объект сохраняется разбором" в описании свойств трактуется так:
 *  значения объекта до разбора и после разбора совпадают, хотя объект и мог изменяться в процессе разбора.
 *  
 *  \section PGSStream Свойства чтения и возврата символов
 *  
 *  Последовательность операций чтения и возврата символов из/в поток \f$ s \f$ не зависит от наполнения контекста \f$ c \f$.
 *  
 *  Если разбор завершился неуспехом, то последовательность символов потока сохраняется разбором.
 *  Всё, что было прочитано из потока, возвращается в поток.
 *  
 *  Если разбор завершился успехом, то по завершении разбора последовательность символов потока выглядит так, как будто символы из потока только читались: \f$ s[k] \; s[k+1] \; \dots \f$ для некоторого \f$ k \f$, \f$ k \ge 0 \f$.
 *  Недостающие (как будто прочитанные) символы \f$ s[0] \dots s[k-1] \f$ образуют принятую строку.
 *  Символы \f$ s[k] \dots s[m] \f$, фактически читавшиеся из потока сверх принятой строки, возвращаются в поток.
 *  
 *  Следует иметь в виду, что:
 *  - при выполнении метода разбора буферизованного потока символы возвращаются в буфер;
 *  - при выполнении метода разбора стандартного потока ввода символы возвращаются в буфер временного буферизованного потока, и после выполнения метода не сохраняются.
 *  
 *  \section PGSFlags Свойства флагов контекста
 *  
 *  Значения флагов контекста сохраняются разбором.
 *  
 *  \section PGSString Свойства строки контекста
 *  
 *  Если разбор неуспешен, то строка контекста сохраняется разбором.
 *  
 *  Если флаг активности строки контекста опущен, то строка контекста сохраняется разбором.
 *  
 *  Если разбор успешен и флаг активности строки контекста поднят, то в конец строки контекста добавляется принятая строка.
 *  
 *  \section PGSData Свойства совокупности данных контекста
 *  
 *  Если флаг активности данных контекста опущен, то совокупность данных контекста сохраняется разбором.
 *  
 *  Если флаг активности данных контекста поднят, то данные совокупности изменяются согласно *способу изменения данных* (как в случае успешного, так и в случае неуспешного разбора).
 */
